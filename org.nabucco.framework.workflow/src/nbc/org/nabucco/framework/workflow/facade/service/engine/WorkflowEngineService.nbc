/*
 * Copyright 2010 PRODYNA AG
 *
 * Licensed under the Eclipse Public License (EPL), Version 1.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.opensource.org/licenses/eclipse-1.0.php or
 * http://nabuccosource.org/License.html
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.nabucco.framework.workflow.facade.service.engine;

import org.nabucco.framework.base.facade.exception.service.WorkflowException;
import org.nabucco.framework.workflow.facade.message.engine.ExecuteWorkflowRq;
import org.nabucco.framework.workflow.facade.message.engine.InitWorkflowRq;
import org.nabucco.framework.workflow.facade.message.engine.ResumeWorkflowRq;
import org.nabucco.framework.workflow.facade.message.engine.WorkflowResultRs;
import org.nabucco.framework.workflow.facade.message.engine.WorkflowTimerRq;

@Author			Nicolas Moser
@Company		PRODYNA AG
@Date			2010-05-04
@Version		1.0
@Description	Workflow Engine service that executes the workflow transitions
public Service WorkflowEngineService {

	@ManualImplementation
	@Description			Starts a new workflow execution.
	public WorkflowResultRs startWorkflow(InitWorkflowRq rq) throws WorkflowException;

	@ManualImplementation
	@Description			Performs a transition between two workflow states.
	public WorkflowResultRs processTransition(ExecuteWorkflowRq rq) throws WorkflowException;
	
	@ManualImplementation
	@Description			Evaluates the next steps for a workflow instance.
	public WorkflowResultRs resumeWorkflow(ResumeWorkflowRq rq) throws WorkflowException;
	
	@ManualImplementation
	@Description			Start the workflow timer service.
	public void startTimer(WorkflowTimerRq rq) throws WorkflowException;
	
}


